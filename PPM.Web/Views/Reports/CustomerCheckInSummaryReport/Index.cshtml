@using Foundation.Core
@using PensionInsurance.Entities
@using PensionInsurance.Shared
@using PensionInsurance.Web.Common;
@model PensionInsurance.Web.Views.Reports.CustomerCheckInSummaryReport.IndexViewModel
@section Styles{
    <!-- BEGIN PAGE LEVEL PLUGINS -->
    <link href=@Url.Content("~/assets/global/plugins/bootstrap-daterangepicker/daterangepicker.min.css") rel="stylesheet" type="text/css" />
    <link href=@Url.Content("~/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css") rel="stylesheet" type="text/css" />
    <link href=@Url.Content("~/assets/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css") rel="stylesheet" type="text/css" />
    <link href=@Url.Content("~/assets/global/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css") rel="stylesheet" type="text/css" />
    <link href=@Url.Content("~/assets/global/plugins/bootstrap-select/css/bootstrap-select.min.css") rel="stylesheet" type="text/css" />
    <style type="text/css">
        .table-nonresponsive {
            table-layout: fixed;
            /*width: 1440px;*/
        }
        .table-nonresponsive td{
            min-width: 72px;
        }
        .table-nonresponsive thead{
            display: table-row-group;
            vertical-align: middle;
            border-color: inherit;
        }
            .table-nonresponsive tr th, .table-nonresponsive tr td {
                padding: 8px;
                line-height: 1.42857;
                vertical-align: top;
                border-top: 1px
            }
            .table-nonresponsive thead tr th {
                font-size: 14px;
                font-weight: 600;
            }
    </style>
}
@section Breadcrumb{
    <div class="page-bar">
        <ul class="page-breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">首页</a>
                <i class="fa fa-circle"></i>
            </li>
            <li>
                <a href="@Url.Action("Index", "Reports")">统计报表</a>
                <i class="fa fa-circle"></i>
            </li>
            <li><span>CB入住情况统计报表</span></li>
        </ul>
    </div>
}
<div class="row" style="margin-top: 10px;">
    <div class="col-md-12">
        <div class="portlet">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-search"></i>CB入住情况统计报表 - 查询条件
                </div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <form id="report-search-form" action="@Url.Action("Index", "CustomerCheckInSummaryReport")" class="form-horizontal">
                    <div class="form-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="control-label col-md-3">所属项目</label>
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(x => x.Query.ProjectIds, Model.ProjectList, new { multiple = "", @class = "selectpicker" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="control-label col-md-3">时间范围</label>
                                    <div class="col-md-9">
                                        <div class="input-group month-picker input-daterange">
                                            @Html.InputText(m => m.Query.StartTime)
                                            <span class="input-group-addon"> 到 </span>
                                            @Html.InputText(m => m.Query.EndTime)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-actions">
                        <div class="text-center"><button type="submit" class="btn green btn-sm padding-lf-15 " data-showloading="true">查询</button></div>
                    </div>
                </form>
                <!-- END FORM-->
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="table-scrollable">
        <div class="portlet light bordered" style="border: none !important;">
            <div class="portlet-title">
                <div class="caption">
                    <i class="icon-social-dribbble font-green"></i>
                    <span class="caption-subject font-green-sharp bold uppercase">CB入住情况统计报表</span>
                </div>
                <div class="text-center">
                    达成率：
                    <span class="badge" style="background-color: #8BB917">100%到105%</span>
                    <span class="badge" style="background-color: #00B3D5">105%以上</span>
                    <span class="badge" style="background-color: #F39700">99%到100%</span>
                    <span class="badge" style="background-color: #D7092F">90%以下</span>
                </div>
                <div class="actions">
                    @if (PensionInsurance.Shared.WebAppContext.Current.User.HasPermission(ModuleType.统计报表, Permission.导出CB入住情况统计报表))
                    {
                        @*<a href="javascript:;" class="btn green export-report"><i class="fa fa-repeat"></i>导出</a>*@
                    }
                </div>
            </div>
            <div class="portlet-body">
                @if (Model.Query.StartTime.HasValue && Model.Query.EndTime.HasValue)
                {
                    for (DateTime i = Model.Query.StartTime.Value; i <= Model.Query.EndTime.Value; i = i.AddMonths(1))
                    {
                        if (i > DateTime.Now.Date)
                        {
                            break;
                        }
                        <table class="table-report table-nonresponsive" style="width: 1440px; margin-bottom: 20px;">
                            <thead>
                                <tr>
                                    <th rowspan="2" colspan="2">@($"{i.Year}年{i.Month}月")</th>
                                    <th colspan="2">入住房间数</th>
                                    <th colspan="2">入住人数</th>
                                    <th colspan="2">入住率</th>
                                    <th colspan="2">当月销售房间数</th>
                                    <th colspan="2">当月入住人数</th>
                                    <th colspan="2">当月退住房间数</th>
                                    <th colspan="2">当月退住人数</th>
                                    <th colspan="2">当月净入住房间数</th>
                                    <th colspan="2">当月净入住人数</th>
                                </tr>
                            <tr>
                                <th class="nowrap">预算</th>
                                <th class="nowrap">实际</th>
                                <th class="nowrap">预算</th>
                                <th class="nowrap">实际</th>
                                <th class="nowrap">预算</th>
                                <th class="nowrap">实际</th>
                                <th class="nowrap">预算</th>
                                <th class="nowrap">实际</th>
                                <th class="nowrap">预算</th>
                                <th class="nowrap">实际</th>
                                <th class="nowrap">预算</th>
                                <th class="nowrap">实际</th>
                                <th class="nowrap">预算</th>
                                <th class="nowrap">实际</th>
                                <th class="nowrap">预算</th>
                                <th class="nowrap">实际</th>
                                <th class="nowrap">预算</th>
                                <th class="nowrap">实际</th>
                            </tr>
                            </thead>
                            <tbody>
                                @foreach (var city in Model.Cities)
                                {
                                    var reports = Model.GetReport(city, i.LastDayOfMonth());
                                    <tr>
                                        <td style="min-width: 100px; width: 100px;">
                                                <a href="javascript:void(0)" class="table-expand" data-expand-type="managementRegion">
                                                    <i class="fa fa-plus-square-o"></i>
                                                </a>    
                                        </td>
                                        <td>
                                            汇总(@city.ShortName)
                                        </td>
                                        @if (reports.Any())
                                        {
                                            <td>@(reports.Sum(x => x.BudgetTotalUnits))</td>
                                            <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.TotallyActual), reports.Sum(x => x.BudgetTotalUnits))">@(reports.Sum(x => x.TotallyActual))</td>
                                            <td>@(reports.Sum(x => x.BudgetTotalResidents))</td>
                                            <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.ActualResidentNumber), reports.Sum(x => x.BudgetTotalResidents))">@(reports.Sum(x => x.ActualResidentNumber))</td>
                                            <td>@((reports.Sum(x => x.RoomCount * x.BudgetOccupancy) / reports.Sum(x => x.RoomCount) * 100).ToString("f2"))%</td>
                                            <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.RoomCount * x.ActualOccupancy) / reports.Sum(x => x.RoomCount) * 100, reports.Sum(x => x.RoomCount * x.BudgetOccupancy) / reports.Sum(x => x.RoomCount) * 100)">@((reports.Sum(x => x.RoomCount * x.ActualOccupancy) / reports.Sum(x => x.RoomCount) * 100).ToString("f2"))%</td>
                                            <td>@(reports.Sum(x => x.BudgetMonthlyActualSale))</td>
                                            <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.MonthlyActualSale), reports.Sum(x => x.BudgetMonthlyActualSale))">@(reports.Sum(x => x.MonthlyActualSale))</td>
                                            <td>@(reports.Sum(x => x.BudgetMonthlyMoveInResidentNumber))</td>
                                            <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.MonthlyMoveInResidentNumber), reports.Sum(x => x.BudgetMonthlyMoveInResidentNumber))">@(reports.Sum(x => x.MonthlyMoveInResidentNumber))</td>
                                            <td>@(reports.Sum(x => x.BudgetMonthlyMoveOut))</td>
                                            if (reports.Sum(x => x.MonthlyMoveOut) > 0)
                                            {
                                                <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.BudgetMonthlyMoveOut), reports.Sum(x => x.MonthlyMoveOut))">@(reports.Sum(x => x.MonthlyMoveOut))</td>
                                            }
                                            else
                                            {
                                                <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.BudgetMonthlyMoveOut) > 1 ? reports.Sum(x => x.BudgetMonthlyMoveOut) : reports.Sum(x => x.BudgetMonthlyMoveOut) + 1, 1)">0</td>
                                            }
                                            <td>@(reports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber))</td>
                                            if (reports.Sum(x => x.MonthyMoveOutResidentNumber) > 0)
                                            {
                                                <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber), reports.Sum(x => x.MonthyMoveOutResidentNumber))">@(reports.Sum(x => x.MonthyMoveOutResidentNumber))</td>
                                            }
                                            else
                                            {
                                                <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber) > 1 ? reports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber) : reports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber) + 1, 1)">0</td>
                                            }
                                            <td>@(reports.Sum(x => x.BudgetMonthlyActualSale) - reports.Sum(x => x.BudgetMonthlyMoveOut))</td>
                                            <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.MonthlyActualSale) - reports.Sum(x => x.MonthlyMoveOut),reports.Sum(x => x.BudgetMonthlyActualSale) - reports.Sum(x => x.BudgetMonthlyMoveOut))">@(reports.Sum(x => x.MonthlyActualSale) - reports.Sum(x => x.MonthlyMoveOut))</td>
                                            <td>@(reports.Sum(x => x.BudgetMonthlyMoveInResidentNumber) - reports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber))</td>
                                            <td style="color: #FFFFFF; background: @Model.GetColor(reports.Sum(x => x.MonthlyMoveInResidentNumber) - reports.Sum(x => x.MonthyMoveOutResidentNumber), reports.Sum(x => x.BudgetMonthlyMoveInResidentNumber) - reports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber))">@(reports.Sum(x => x.MonthlyMoveInResidentNumber) - reports.Sum(x => x.MonthyMoveOutResidentNumber))</td>
                                        }
                                    </tr>
                                    <tr>
                                        <td style="padding: 8px 0;" colspan="20">
                                            @foreach (var managementRegion in Model.ManagementRegions.Where(x=>x.City == city))
                                            {
                                                var regionReports = Model.GetReport(city, managementRegion, i.LastDayOfMonth());
                                                <table style="margin-left: 20px;" table-type="managementRegion" class="table-nonresponsive hidden table-expandable">
                                                    <tbody>
                                                    <tr>
                                                        <td  style="min-width: 50px; width: 50px;">
                                                            <a href="javascript:void(0)" class="table-expand" data-expand-type="project">
                                                                <i class="fa fa-plus-square-o"></i>
                                                            </a>
                                                        </td>
                                                        <td style="">
                                                            @managementRegion.Name
                                                        </td>
                                                        @if (regionReports.Any())
                                                        {
                                                            <td style="">@(regionReports.Sum(x => x.BudgetTotalUnits))</td>
                                                            <td style="color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.TotallyActual), regionReports.Sum(x => x.BudgetTotalUnits))">@(regionReports.Sum(x => x.TotallyActual))</td>
                                                            <td style="">@(regionReports.Sum(x => x.BudgetTotalResidents))</td>
                                                            <td style=" color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.ActualResidentNumber), regionReports.Sum(x => x.BudgetTotalResidents))">@(regionReports.Sum(x => x.ActualResidentNumber))</td>
                                                            <td style="">@((regionReports.Sum(x => x.RoomCount * x.BudgetOccupancy) / regionReports.Sum(x => x.RoomCount) * 100).ToString("f2"))%</td>
                                                            <td style=" color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.RoomCount * x.ActualOccupancy) / regionReports.Sum(x => x.RoomCount) * 100, regionReports.Sum(x => x.RoomCount * x.BudgetOccupancy) / regionReports.Sum(x => x.RoomCount) * 100)">@((regionReports.Sum(x => x.RoomCount * x.ActualOccupancy) / regionReports.Sum(x => x.RoomCount) * 100).ToString("f2"))%</td>
                                                            <td style="">@(regionReports.Sum(x => x.BudgetMonthlyActualSale))</td>
                                                            <td style=" color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.MonthlyActualSale), regionReports.Sum(x => x.BudgetMonthlyActualSale))">@(regionReports.Sum(x => x.MonthlyActualSale))</td>
                                                            <td style="">@(regionReports.Sum(x => x.BudgetMonthlyMoveInResidentNumber))</td>
                                                            <td style=" color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.MonthlyMoveInResidentNumber), regionReports.Sum(x => x.BudgetMonthlyMoveInResidentNumber))">@(regionReports.Sum(x => x.MonthlyMoveInResidentNumber))</td>
                                                            <td style="">@(regionReports.Sum(x => x.BudgetMonthlyMoveOut))</td>
                                                            if (regionReports.Sum(x => x.MonthlyMoveOut) > 0)
                                                            {
                                                                <td style=" color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.BudgetMonthlyMoveOut), regionReports.Sum(x => x.MonthlyMoveOut))">@(regionReports.Sum(x => x.MonthlyMoveOut))</td>
                                                            }
                                                            else
                                                            {
                                                                <td style=" color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.BudgetMonthlyMoveOut) > 1 ? regionReports.Sum(x => x.BudgetMonthlyMoveOut) : regionReports.Sum(x => x.BudgetMonthlyMoveOut) + 1, 1)">0</td>
                                                            }
                                                            <td style="">@(regionReports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber))</td>
                                                            if (regionReports.Sum(x => x.MonthyMoveOutResidentNumber) > 0)
                                                            {
                                                                <td style=" color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber), regionReports.Sum(x => x.MonthyMoveOutResidentNumber))">@(regionReports.Sum(x => x.MonthyMoveOutResidentNumber))</td>
                                                            }
                                                            else
                                                            {
                                                                <td style=" color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber) > 1 ? regionReports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber) : regionReports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber) + 1, 1)">0</td>
                                                            }
                                                            <td>@(regionReports.Sum(x => x.BudgetMonthlyActualSale) - regionReports.Sum(x => x.BudgetMonthlyMoveOut))</td>
                                                            <td style="color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.MonthlyActualSale) - regionReports.Sum(x => x.MonthlyMoveOut),regionReports.Sum(x => x.BudgetMonthlyActualSale) - regionReports.Sum(x => x.BudgetMonthlyMoveOut))">@(regionReports.Sum(x => x.MonthlyActualSale) - regionReports.Sum(x => x.MonthlyMoveOut))</td>
                                                            <td>@(regionReports.Sum(x => x.BudgetMonthlyMoveInResidentNumber) - regionReports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber))</td>
                                                            <td style="color: #FFFFFF; background: @Model.GetColor(regionReports.Sum(x => x.MonthlyMoveInResidentNumber) - regionReports.Sum(x => x.MonthyMoveOutResidentNumber), regionReports.Sum(x => x.BudgetMonthlyMoveInResidentNumber) - regionReports.Sum(x => x.BudgetMonthlyMoveOutResidentNumber))">@(regionReports.Sum(x => x.MonthlyMoveInResidentNumber) - regionReports.Sum(x => x.MonthyMoveOutResidentNumber))</td>
                                                        }
                                                    </tr>
                                                    <tr>
                                                        <td style="padding: 8px 0;" colspan="20">
                                                                @foreach (var project in Model.Projects.Where(x=>x.ManagementRegion == managementRegion))
                                                                {
                                                                    var projectReport = Model.GetReport(city, managementRegion, project.Id, i.LastDayOfMonth());
                                                                    <table style="margin-left: 49px;" table-type="project" class="table-nonresponsive hidden table-expandable">
                                                                        <tbody>
                                                                        <tr>
                                                                            <td style="">
                                                                                @project.Name
                                                                            </td>
                                                                            @if (projectReport != null)
                                                                            {
                                                                                <td style="">@projectReport.BudgetTotalUnits</td>
                                                                                <td style=" color: #FFFFFF; background: @Model.GetColor(projectReport.TotallyActual, projectReport.BudgetTotalUnits)">@projectReport.TotallyActual</td>
                                                                                <td style="">@projectReport.BudgetTotalResidents</td>
                                                                                <td style=" color: #FFFFFF; background: @Model.GetColor(projectReport.ActualResidentNumber, projectReport.BudgetTotalResidents)">@projectReport.ActualResidentNumber</td>
                                                                                <td style="">@((projectReport.BudgetOccupancy * 100).ToString("f2"))%</td>
                                                                                <td style=" color: #FFFFFF; background: @Model.GetColor(projectReport.ActualOccupancy * 100, projectReport.BudgetOccupancy * 100)">@((projectReport.ActualOccupancy * 100).ToString("f2"))%</td>
                                                                                <td style="">@projectReport.BudgetMonthlyActualSale</td>
                                                                                <td style=" color: #FFFFFF; background: @Model.GetColor(projectReport.MonthlyActualSale, projectReport.BudgetMonthlyActualSale)">@projectReport.MonthlyActualSale</td>
                                                                                <td style="">@projectReport.BudgetMonthlyMoveInResidentNumber</td>
                                                                                <td style=" color: #FFFFFF; background: @Model.GetColor(projectReport.MonthlyMoveInResidentNumber, projectReport.BudgetMonthlyMoveInResidentNumber)">@projectReport.MonthlyMoveInResidentNumber</td>
                                                                                <td style="">@projectReport.BudgetMonthlyMoveOut</td>
                                                                                if (projectReport.MonthlyMoveOut > 0)
                                                                                {
                                                                                    <td style=" color: #FFFFFF; background: @Model.GetColor(projectReport.BudgetMonthlyMoveOut, projectReport.MonthlyMoveOut)">@projectReport.MonthlyMoveOut</td>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <td style=" color: #FFFFFF; background: @Model.GetColor(projectReport.BudgetMonthlyMoveOut > 1 ? projectReport.BudgetMonthlyMoveOut : projectReport.BudgetMonthlyMoveOut + 1, 1)">0</td>
                                                                                }
                                                                                <td style="">@projectReport.BudgetMonthlyMoveOutResidentNumber</td>
                                                                                if (projectReport.MonthyMoveOutResidentNumber > 0)
                                                                                {
                                                                                    <td style=" color: #FFFFFF; background: @Model.GetColor(projectReport.BudgetMonthlyMoveOutResidentNumber, projectReport.MonthyMoveOutResidentNumber)">@projectReport.MonthyMoveOutResidentNumber</td>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <td style=" color: #FFFFFF; background: @Model.GetColor(projectReport.BudgetMonthlyMoveOutResidentNumber > 1 ? projectReport.BudgetMonthlyMoveOutResidentNumber : projectReport.BudgetMonthlyMoveOutResidentNumber + 1, 1)">0</td>
                                                                                }
                                                                                <td>@(projectReport.BudgetMonthlyActualSale - projectReport.BudgetMonthlyMoveOut)</td>
                                                                                <td style="color: #FFFFFF; background: @Model.GetColor(projectReport.MonthlyActualSale - projectReport.MonthlyMoveOut,projectReport.BudgetMonthlyActualSale - projectReport.BudgetMonthlyMoveOut)">@(projectReport.MonthlyActualSale - projectReport.MonthlyMoveOut)</td>
                                                                                <td>@(projectReport.BudgetMonthlyMoveInResidentNumber- projectReport.BudgetMonthlyMoveOutResidentNumber)</td>
                                                                                <td style="color: #FFFFFF; background: @Model.GetColor(projectReport.MonthlyMoveInResidentNumber - projectReport.MonthyMoveOutResidentNumber,projectReport.BudgetMonthlyMoveInResidentNumber- projectReport.BudgetMonthlyMoveOutResidentNumber)">@(projectReport.MonthlyMoveInResidentNumber - projectReport.MonthyMoveOutResidentNumber)</td>
                                                                            }
                                                                        </tr>
                                                                        </tbody>
                                                                    </table>
                                                                }
                                                            </td>
                                                    </tr>
                                                    </tbody>
                                                </table>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                }
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script src=@Url.Content("~/assets/global/plugins/bootstrap-select/js/bootstrap-select.min.js") type="text/javascript"></script>
    <script src=@Url.Content("~/assets/global/plugins/moment.min.js") type="text/javascript"></script>
    <script src=@Url.Content("~/assets/global/plugins/bootstrap-daterangepicker/daterangepicker.min.js") type="text/javascript"></script>
    <script src=@Url.Content("~/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js") type="text/javascript"></script>
    <script src=@Url.Content("~/assets/global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js") type="text/javascript"></script>
    <script src=@Url.Content("~/assets/global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js") type="text/javascript"></script>
    <script src=@Url.Content("~/assets/global/scripts/app.min.js") type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('.selectpicker').selectpicker({
                style: 'btn-xs',
                iconBase: 'fa',
                tickIcon: 'fa-check',
                noneSelectedText: "--未选择--"
            });

            $("select[name='Query.ProjectIds']").val(@Html.Raw(Json.Encode(Model.Query.ProjectIds)));
            $('.selectpicker').selectpicker('refresh');

            $("input[name='Query.StartTime']").datepicker({
                startDate: "2017-01",
                orientation: "left",
                autoclose: true,
                startView: "months",
                minViewMode: "months",
                format: "yyyy-mm"
            });

            $(document).on("click", ".export-report", function () {
                var form = $("#report-search-form");
                var projectIds = form.find("select[name='Query.ProjectIds']").val();
                var st = $("#Query_StartTime").val();
                var et = $("#Query_EndTime").val();
                var command = {
                    ProjectIds: projectIds,
                    StartTime: st,
                    EndTime: et
                };
                App.confirm(function () {
                    form.postCommand('@Url.Action("Export", "CustomerValidCheckInDaysReport")', command, {
                        onSuccess: function (result) {
                            window.location = "../" + result.redirect;
                        }
                    });
                });
            }).on("click",
                ".table-expand",
                function() {
                    var $this = $(this);
                    var icon = $this.find("i");
                    if (icon.hasClass("fa-plus-square-o")) {
                        icon.removeClass("fa-plus-square-o").addClass("fa-minus-square-o");
                        $this.parents("tr").next().find("[table-type=" + $this.attr("data-expand-type")+"]").removeClass("hidden");
                    } else {
                        icon.removeClass("fa-minus-square-o").addClass("fa-plus-square-o");
                        $this.parents("tr").next().find("[table-type=" + $this.attr("data-expand-type") +"]").addClass("hidden");
                    }
                });
        });
    </script>
}  